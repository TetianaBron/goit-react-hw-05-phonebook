{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/Layout/Layout.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","alert","props","onAddContact","this","className","onSubmit","htmlFor","type","id","onChange","Component","defaultProps","Layout","children","Filter","onChangeFilter","ContactList","contacts","onRemoveContact","map","onClick","App","filter","addContact","contact","uuidv4","find","item","toLowerCase","prevState","removeContact","contactId","changeFilter","getVisibleContacts","includes","visibleContacts","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.dc9ce4c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactForm.css';\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    static propTypes = {\r\n        onAddContact: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {};\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n            this.setState({\r\n                [name]: value,\r\n            });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { name, number } = this.state;\r\n        e.preventDefault();\r\n\r\n        if (name === '' || number === '') {\r\n            alert('Enter the data.');\r\n        } else {\r\n            this.props.onAddContact(name, number);\r\n            this.setState({\r\n                name: '',\r\n                number: ''\r\n            });\r\n        }\r\n    };\r\n    \r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <div>\r\n                <form\r\n                    className=\"Form\"\r\n                    onSubmit={this.handleSubmit} >\r\n                    <label\r\n                        htmlFor=\"name\"\r\n                        className=\"Label\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    id=\"name\"\r\n                    className=\"Input\"\r\n                    onChange={this.handleChange}\r\n                    name=\"name\"\r\n                    />\r\n            \r\n                    <label\r\n                        htmlFor=\"number\"\r\n                        className=\"Label\">Number</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={number}\r\n                    id=\"number\"\r\n                    className=\"Input\"\r\n                    onChange={this.handleChange}\r\n                    name=\"number\"\r\n                    />\r\n                    \r\n                    <button type=\"submit\">\r\n                      Add contact\r\n                    </button>\r\n                 </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Layout.css';\r\n\r\nconst Layout = ({ children }) =>\r\n    <div className=\"Layout\">{children}</div>;\r\n\r\nexport default Layout;","import './Filter.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({value, onChangeFilter}) => (\r\n    <div className=\"FindForm\">\r\n        <label htmlFor=\"find\"\r\n            className=\"FindLabel\">\r\n            Find contact by name\r\n            </label>\r\n        <input\r\n            type=\"text\"\r\n            value={value}\r\n            id=\"find\"\r\n            className=\"FindInput\"\r\n            onChange={e => onChangeFilter(e.target.value)}\r\n             />\r\n</div>\r\n)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func\r\n};\r\n\r\nexport default Filter;","import './ContactList.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n    <div>\r\n    <ul>\r\n            {contacts.map(({ id, name, number }) => (\r\n            <li\r\n                key={id}\r\n                className=\"ContactItem\">\r\n                   - {name}: {number}\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => onRemoveContact(id)}>\r\n                     Delete\r\n                 </button>\r\n            </li>\r\n        ))}\r\n        </ul>\r\n        \r\n    </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\nimport Layout from './Components/Layout/Layout';\r\nimport Filter from './Components/Filter/Filter';\r\nimport ContactList from './Components/ContactList/ContactList';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    static propTypes = {\r\n    };\r\n\r\n    static defaultProps = {};\r\n\r\n    state = {\r\n        contacts: [\r\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}, \r\n        ],\r\n        filter: ''\r\n    };\r\n\r\n    addContact = (name, number) => {\r\n       const contact = {\r\n       id: uuidv4(),\r\n       name,\r\n       number\r\n       };\r\n\r\n        if (this.state.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\r\n            alert(`${name} is already in contacts.`);\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    contacts: [...prevState.contacts, contact],\r\n                };\r\n            });\r\n        };\r\n    };\r\n    \r\n    removeContact = contactId => {\r\n        this.setState(prevState => {\r\n            return {\r\n                contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n            };\r\n        });\r\n    };\r\n\r\n    changeFilter = filter => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    };\r\n  \r\n    render() {\r\n        const { contacts, filter } = this.state;\r\n        const visibleContacts = this.getVisibleContacts();\r\n        return ( \r\n            <Layout>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm onAddContact={this.addContact} /> \r\n                {contacts.length > 0 && (\r\n                <h2>Contacts</h2>\r\n                )}\r\n                 {contacts.length > 1 && (\r\n                    <Filter\r\n                        value={filter}\r\n                        onChangeFilter={this.changeFilter} />\r\n                )}\r\n                {contacts.length > 0 && (\r\n                    <ContactList\r\n                        contacts={visibleContacts}\r\n                        onRemoveContact={this.removeContact}/>\r\n                )} \r\n            </Layout>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />, document.querySelector('#root'),\n);\n"],"sourceRoot":""}